/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views;

import Controller.BookingDAO;
import Controller.BookingMovieScheduleDAO;
import Controller.FoodDetailsDAO;
import Controller.SeatDAO;
import Models.Booking;
import Models.BookingMovieSchedule;
import Models.FoodDetails;
import Models.Seat;
import Models.User;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nguye
 */
public class PnlUsDoAnDaDat extends javax.swing.JPanel {

    /**
     * Creates new form PnlAdHoaDon
     */
    private User currentUser;
    public PnlUsDoAnDaDat(User user) {
        initComponents();
        try {
            showData(user);
        } catch (SQLException ex) {
            Logger.getLogger(PnlUsDoAnDaDat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PnlUsDoAnDaDat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void showDetail(User user, LocalDate date){
//        currentUser = user;
        // Model của bảng tbBooking
        DefaultTableModel model = (DefaultTableModel) tbDoAn.getModel();
        model.setRowCount(0); // Xóa các dòng cũ trong bảng tbBooking

        FoodDetailsDAO FoodDetailsDAO = new FoodDetailsDAO();
        // getFoodBookingByDateAndUserId
        for (FoodDetails foodDetails : FoodDetailsDAO.getFoodBookingByDateAndUserId(date, user.getUserId())) {
//            if(currentUser.getUserId() != foodDetails.getUserId()){
//                break;
//            }
            Object[] row = new Object[4];
            row[0] = foodDetails.getFoodName();
            row[1] = foodDetails.getQuantity();
            row[2] = foodDetails.getPrice();
            row[3] = foodDetails.getBookingDate();

            // Thêm dòng vào bảng tbBooking
            model.addRow(row);
        }
    }
    public void showData(User user) throws SQLException, ClassNotFoundException {
        currentUser = user;
        // Model của bảng tbBooking
        DefaultTableModel model = (DefaultTableModel) tbNgayDat.getModel();
        model.setRowCount(0); // Xóa các dòng cũ trong bảng tbBooking

        // Lấy dữ liệu hóa đơn đồ ăn
        FoodDetailsDAO FoodDetailsDAO = new FoodDetailsDAO();
        for (LocalDate date : FoodDetailsDAO.getDistinctBookingDatesByUserId(user.getUserId())) {
//            if(currentUser.getUserId() != foodDetails.getUserId()){
//                break;
//            }
            Object[] row = new Object[1];
            row[0] = date;

            // Thêm dòng vào bảng tbBooking
            model.addRow(row);
        }
        // Thêm dữ liệu vào bảng tbBooking
//        for (BookingMovieSchedule bookingMovieSchedule : bookingMovies) {
//            if(currentUser.getUserId() != bookingMovieSchedule.getUserId()){
//                continue;
//            }
//            Object[] row = new Object[6];
//            row[0] = bookingMovieSchedule.getBookingId();
//            row[1] = bookingMovieSchedule.getMovieName();
//            row[2] = bookingMovieSchedule.getBookingDate();
//            row[3] = bookingMovieSchedule.getScheduleDate();
//            row[4] = bookingMovieSchedule.getScheduleStart();
//            row[5] = bookingMovieSchedule.getAmount();
//
//            // Thêm dòng vào bảng tbBooking
//            model.addRow(row);
//        }

        // Model của bảng tbSeat
//        DefaultTableModel model1 = (DefaultTableModel) tbSeat.getModel();
//        model1.setRowCount(0); // Xóa các dòng cũ trong bảng tbSeat
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbDoAn = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbNgayDat = new javax.swing.JTable();

        tbDoAn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên đồ ăn kèm", "Số lượng", "Tổng tiền đã thanh toán", "Ngày đặt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbDoAn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDoAnMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbDoAn);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Danh sách hoá đơn đồ ăn");

        tbNgayDat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Ngày đặt"
            }
        ));
        tbNgayDat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbNgayDatMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbNgayDat);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(135, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbDoAnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDoAnMouseClicked
//        try {
//            int row = this.tbDoAn.getSelectedRow();
//            int bookingId = (int) tbDoAn.getValueAt(row, 0);
//            SeatDAO seatDAO = new SeatDAO();
//            List<Seat> seats = seatDAO.getSeatsByBookingId(bookingId);
//            
//            DefaultTableModel model = (DefaultTableModel) tbSeat.getModel();
//            model.setRowCount(0);
//            
//            for (Seat seat : seats) {
//                Object[] rowData = new Object[3];
//                rowData[0] = seat.getSeatId();      // ID ghế
//                rowData[1] = seat.getSeatType();    // Loại ghế
//                rowData[2] = seat.getNumber();      // Số ghế
//                model.addRow(rowData);
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(PnlUsDoAnDaDat.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(PnlUsDoAnDaDat.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_tbDoAnMouseClicked

    private void tbNgayDatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNgayDatMouseClicked
        // TODO add your handling code here:
        int row = this.tbNgayDat.getSelectedRow();
        LocalDate date = (LocalDate) tbNgayDat.getValueAt(row, 0);
        showDetail(currentUser, date);
        
    }//GEN-LAST:event_tbNgayDatMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbDoAn;
    private javax.swing.JTable tbNgayDat;
    // End of variables declaration//GEN-END:variables
}
