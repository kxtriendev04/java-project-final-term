/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views;

import Controller.BookingDAO;
import Controller.BookingMovieScheduleDAO;
import Controller.SeatDAO;
import Models.Booking;
import Models.BookingMovieSchedule;
import Models.Seat;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nguye
 */
public class PnlAdHoaDon extends javax.swing.JPanel {

    /**
     * Creates new form PnlAdHoaDon
     */
    public PnlAdHoaDon() {
        initComponents();
        try {
            showData();
        } catch (SQLException ex) {
            Logger.getLogger(PnlAdHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PnlAdHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnXoa.setEnabled(false);
    }
    public void showData() throws SQLException, ClassNotFoundException {
        // Model của bảng tbBooking
        DefaultTableModel model = (DefaultTableModel) tbBooking.getModel();
        model.setRowCount(0); // Xóa các dòng cũ trong bảng tbBooking

        // Lấy dữ liệu hóa đơn và phim
        BookingMovieScheduleDAO bookingMovieDAO = new BookingMovieScheduleDAO();
        List<BookingMovieSchedule> bookingMovies = bookingMovieDAO.getBookingWithMovies();

        // Thêm dữ liệu vào bảng tbBooking
        for (BookingMovieSchedule bookingMovieSchedule : bookingMovies) {
            
            Object[] row = new Object[7];
            row[0] = bookingMovieSchedule.getBookingId();
            row[1] = bookingMovieSchedule.getMovieName();
            row[2] = bookingMovieSchedule.getBookingDate();
            row[3] = bookingMovieSchedule.getScheduleDate();
            row[4] = bookingMovieSchedule.getScheduleStart();
            row[5] = bookingMovieSchedule.getAmount();
            row[6] = bookingMovieSchedule.getUserId();

            // Thêm dòng vào bảng tbBooking
            model.addRow(row);
        }

        // Model của bảng tbSeat
        DefaultTableModel model1 = (DefaultTableModel) tbSeat.getModel();
        model1.setRowCount(0); // Xóa các dòng cũ trong bảng tbSeat
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbBooking = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtTim = new javax.swing.JTextField();
        btnTim = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbSeat = new javax.swing.JTable();
        btnXoa = new javax.swing.JButton();

        tbBooking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hoá đơn", "Tên phim", "Ngày đặt", "Ngày chiếu", "Giờ chiếu", "Thanh toán", "UserId"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbBooking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbBookingMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbBooking);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Quản lý danh sách hoá đơn");

        jLabel4.setForeground(new java.awt.Color(153, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Có thể xem");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Tìm kiếm: ");

        txtTim.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        tbSeat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Loại ghế", "Đơn giá"
            }
        ));
        jScrollPane3.setViewportView(tbSeat);

        btnXoa.setText("Reset");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(btnXoa))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTim)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbBookingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBookingMouseClicked
        try {
            int row = this.tbBooking.getSelectedRow();
            int bookingId = (int) tbBooking.getValueAt(row, 0);
            SeatDAO seatDAO = new SeatDAO();
            List<Seat> seats = seatDAO.getSeatsByBookingId(bookingId);
            
            DefaultTableModel model = (DefaultTableModel) tbSeat.getModel();
            model.setRowCount(0);
            
            for (Seat seat : seats) {
                Object[] rowData = new Object[3];
                rowData[0] = seat.getSeatId();      // ID ghế
                rowData[1] = seat.getSeatType();    // Loại ghế
                rowData[2] = seat.getNumber();      // Số ghế
                model.addRow(rowData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(PnlAdHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PnlAdHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbBookingMouseClicked

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        try {
            String id = txtTim.getText();
            DefaultTableModel model = (DefaultTableModel) tbBooking.getModel();
            model.setRowCount(0); // Xóa các dòng cũ trong bảng tbBooking
            
            // Lấy dữ liệu hóa đơn và phim
            BookingMovieScheduleDAO bookingMovieDAO = new BookingMovieScheduleDAO();
            BookingMovieSchedule bookingMovies = bookingMovieDAO.getBookingWithMoviesById(id);
            if(bookingMovies == null){
                DefaultTableModel model1 = (DefaultTableModel) tbSeat.getModel();
                model1.setRowCount(0); 
                return;
            }
            // Thêm dữ liệu vào bảng tbBooking
            
            Object[] row = new Object[7];
            row[0] = bookingMovies.getBookingId();
            row[1] = bookingMovies.getMovieName();
            row[2] = bookingMovies.getBookingDate();
            row[3] = bookingMovies.getScheduleDate();
            row[4] = bookingMovies.getScheduleStart();
            row[5] = bookingMovies.getAmount();
            row[6] = bookingMovies.getUserId();
                
                // Thêm dòng vào bảng tbBooking
            model.addRow(row);
            
            
            // Model của bảng tbSeat
            DefaultTableModel model1 = (DefaultTableModel) tbSeat.getModel();
            model1.setRowCount(0); // Xóa các dòng cũ trong bảng tbSeat
        } catch (SQLException ex) {
            Logger.getLogger(PnlAdHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PnlAdHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnXoa.setEnabled(true);
        btnTim.setEnabled(false);
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            showData();
        } catch (SQLException ex) {
            Logger.getLogger(PnlAdHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PnlAdHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnXoa.setEnabled(false);
        btnTim.setEnabled(true);
    }//GEN-LAST:event_btnXoaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbBooking;
    private javax.swing.JTable tbSeat;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
}
